<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>